/*THIS FILE WAS GENERATED BY A SCRIPT. DO NOT EDIT DIRECTLY.*/

import { UnitOfMeasure } from "../../../Definitions/Global/UOM.js";
import { Family } from "../../../Definitions/Global/Families.js";
import type { NodeInfo } from "../../../Model/NodeInfo.js";
import type { ISY } from "../../../ISY.js";
import { Base } from "../index.js";
import { Driver } from "../../../Definitions/Global/Drivers.js";
import { Poly } from "../../../Definitions/index.js";
import type { DriverState } from "../../../Model/DriverState.js";
import { NodeFactory } from "../../NodeFactory.js";

export const nodeDefId = "KEYPAD_BTN";

type Commands = SwitchNode.Commands;
type Drivers = SwitchNode.Drivers;

export class SwitchNode extends Base<Drivers, Commands> {
	public readonly commands = {};
	static nodeDefId = "KEYPAD_BTN";
	constructor (isy: ISY, nodeInfo: NodeInfo) {
		super(isy, nodeInfo);
	}
}

NodeFactory.register(SwitchNode);

export namespace SwitchNode {
	export type Commands = {};
	export type Drivers = {};
}
